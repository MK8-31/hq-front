{"ast":null,"code":"import _asyncToGenerator from \"/app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"regenerator-runtime/runtime.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport axios from \"axios\";\nimport { extend, ValidationObserver, ValidationProvider } from \"vee-validate\";\nimport { max, min, required, email } from \"vee-validate/dist/rules\";\nextend(\"max\", max);\nextend(\"min\", min);\nextend(\"required\", required);\nextend(\"email\", email);\nexport default {\n  components: {\n    ValidationProvider: ValidationProvider,\n    ValidationObserver: ValidationObserver\n  },\n  data: function data() {\n    return {\n      showPassword: false,\n      email: \"\",\n      password: \"\",\n      invalid: false,\n      errorMessage: \"\"\n    };\n  },\n  computed: {\n    isLoggedIn: function isLoggedIn() {\n      return this.$store.state.isLoggedIn;\n    }\n  },\n  methods: {\n    submit: function submit() {\n      var _this = this;\n\n      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                console.log(_this.email, _this.password);\n                _context.next = 3;\n                return axios.post(\"/api/v1/auth/sign_in\", {\n                  email: _this.email,\n                  password: _this.password\n                }).then(function (response) {\n                  console.log(response);\n\n                  _this.$cookies.set(\"access-token\", response.headers[\"access-token\"]);\n\n                  _this.$cookies.set(\"client\", response.headers[\"client\"]);\n\n                  _this.$cookies.set(\"uid\", decodeURI(response.headers[\"uid\"]));\n\n                  _this.$store.commit(\"setIsLoggedIn\", true);\n\n                  _this.$router.push(\"/\");\n                }).catch(function (error) {\n                  _this.errorMessage = \"メールアドレスとパスワードの組み合わせが正しくありません。\";\n                  console.error(error);\n                  console.error(error.response);\n                  error.response.data.errors.forEach(function (error) {\n                    console.error(error);\n                  });\n                });\n\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }))();\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsCA;AACA;AACA;AAEAA;AACAA;AACAA;AACAA;AAEA;AACAC;AACAC,0CADA;AAEAC;AAFA,GADA;AAKAC;AAAA;AACAC,yBADA;AAEAC,eAFA;AAGAC,kBAHA;AAIAC,oBAJA;AAKAC;AALA;AAAA,GALA;AAYAC;AACAC,cADA,wBACA;AACA;AACA;AAHA,GAZA;AAiBAC;AACAC,UADA,oBACA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AACAC;AADA;AAAA,uBAEAC,MACAC,IADA,CACA,sBADA,EACA;AACAV,oCADA;AAEAC;AAFA,iBADA,EAKAU,IALA,CAKA;AACAH;;AACA;;AACA;;AACA;;AACA;;AACA;AACA,iBAZA,EAaAI,KAbA,CAaA;AACA,uCACA,+BADA;AAEAJ;AACAA;AACAK;AACAL;AACA,mBAFA;AAGA,iBArBA,CAFA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAwBA;AAzBA;AAjBA","names":["extend","components","ValidationProvider","ValidationObserver","data","showPassword","email","password","invalid","errorMessage","computed","isLoggedIn","methods","submit","console","axios","post","then","catch","error"],"sourceRoot":"src/components","sources":["LoginPage.vue"],"sourcesContent":["<template>\n  <v-card width=\"400px\" class=\"mx-auto mt-5\">\n    <v-alert v-if=\"errorMessage\" type=\"error\">{{ errorMessage }}</v-alert>\n    <v-card-title>\n      <h1 class=\"display-1\">ログイン</h1>\n    </v-card-title>\n    <v-card-text>\n      <v-form>\n        <v-text-field\n          v-validate=\"'required|min:6'\"\n          v-model=\"email\"\n          prepend-icon=\"mdi-email\"\n          type=\"email\"\n          label=\"メールアドレス\"\n          required\n          :error-messages=\"errors\"\n        />\n\n        <v-text-field\n          v-validate=\"'required|min:6'\"\n          v-model=\"password\"\n          @click:append=\"showPassword = !showPassword\"\n          prepend-icon=\"mdi-lock\"\n          :append-icon=\"showPassword ? 'mdi-eye' : 'mdi-eye-off'\"\n          :type=\"showPassword ? 'text' : 'password'\"\n          label=\"パスワード\"\n          required\n          :error-messages=\"errors\"\n        />\n        <v-card-actions>\n          <v-btn class=\"info\" @click=\"submit()\">ログイン</v-btn>\n        </v-card-actions>\n      </v-form>\n    </v-card-text>\n  </v-card>\n</template>\n\n<script>\n  import axios from \"axios\";\n  import { extend, ValidationObserver, ValidationProvider } from \"vee-validate\";\n  import { max, min, required, email } from \"vee-validate/dist/rules\";\n\n  extend(\"max\", max);\n  extend(\"min\", min);\n  extend(\"required\", required);\n  extend(\"email\", email);\n\n  export default {\n    components: {\n      ValidationProvider,\n      ValidationObserver,\n    },\n    data: () => ({\n      showPassword: false,\n      email: \"\",\n      password: \"\",\n      invalid: false,\n      errorMessage: \"\",\n    }),\n    computed: {\n      isLoggedIn() {\n        return this.$store.state.isLoggedIn;\n      },\n    },\n    methods: {\n      async submit() {\n        console.log(this.email, this.password);\n        await axios\n          .post(\"/api/v1/auth/sign_in\", {\n            email: this.email,\n            password: this.password,\n          })\n          .then((response) => {\n            console.log(response);\n            this.$cookies.set(\"access-token\", response.headers[\"access-token\"]);\n            this.$cookies.set(\"client\", response.headers[\"client\"]);\n            this.$cookies.set(\"uid\", decodeURI(response.headers[\"uid\"]));\n            this.$store.commit(\"setIsLoggedIn\", true);\n            this.$router.push(\"/\");\n          })\n          .catch((error) => {\n            this.errorMessage =\n              \"メールアドレスとパスワードの組み合わせが正しくありません。\";\n            console.error(error);\n            console.error(error.response);\n            error.response.data.errors.forEach((error) => {\n              console.error(error);\n            });\n          });\n      },\n    },\n  };\n</script>\n"]},"metadata":{},"sourceType":"module"}