{"ast":null,"code":"import _asyncToGenerator from \"/app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"regenerator-runtime/runtime.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport axios from \"axios\";\nimport { extend, ValidationObserver, ValidationProvider, localize } from \"vee-validate\";\nimport { max } from \"vee-validate/dist/rules\";\nimport ja from \"vee-validate/dist/locale/ja\";\nlocalize(\"ja\", ja);\nextend(\"max\", max);\nexport default {\n  components: {\n    ValidationProvider: ValidationProvider,\n    ValidationObserver: ValidationObserver\n  },\n  data: function data() {\n    return {\n      task: {},\n      taskName: \"\",\n      errorMessage: \"\"\n    };\n  },\n  methods: {\n    /**\n     * タスクを編集するための関数です\n     */\n    createTask: function createTask() {\n      var _this = this;\n\n      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return axios.put(\"/api/v1/tasks/\".concat(_this.task.id), {\n                  task: {\n                    name: _this.taskName\n                  }\n                }, {\n                  headers: {\n                    \"access-token\": _this.$cookies.get(\"access-token\"),\n                    client: _this.$cookies.get(\"client\"),\n                    uid: _this.$cookies.get(\"uid\")\n                  }\n                }).then(function (response) {\n                  console.log(response);\n\n                  _this.$router.push(\"/task_list\");\n                }).catch(function (error) {\n                  console.error(error);\n                  console.error(error.response);\n                  _this.errorMessage = error.response.data.errors[0];\n                  console.error(_this.errorMessage);\n                });\n\n              case 2:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }))();\n    },\n\n    /**\n     * タスクを削除するための関数です\n     */\n    deleteTask: function deleteTask() {\n      var _this2 = this;\n\n      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return axios.delete(\"/api/v1/tasks/\".concat(_this2.task.id), {\n                  headers: {\n                    \"access-token\": _this2.$cookies.get(\"access-token\"),\n                    client: _this2.$cookies.get(\"client\"),\n                    uid: _this2.$cookies.get(\"uid\")\n                  }\n                }).then(function (response) {\n                  console.log(response);\n\n                  _this2.$router.push(\"/task_list\");\n                }).catch(function (error) {\n                  console.error(error);\n                  console.error(error.response);\n                  _this2.errorMessage = error.response.data.errors[0];\n                  console.error(_this2.errorMessage);\n                });\n\n              case 2:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }))();\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwCA;AACA,SACAA,MADA,EAEAC,kBAFA,EAGAC,kBAHA,EAIAC,QAJA,QAKA,cALA;AAMA;AACA;AAEAA;AACAH;AAEA;AACAI;AACAF,0CADA;AAEAD;AAFA,GADA;AAKAI;AAAA;AACAC,cADA;AAEAC,kBAFA;AAGAC;AAHA;AAAA,GALA;AAUAC;AACA;AACA;AACA;AACAC,cAJA,wBAIA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACAC,MACAC,GADA,yBAEA,aAFA,GAGA;AACAN;AACAO;AADA;AADA,iBAHA,EAQA;AACAC;AACA,sEADA;AAEAC,wDAFA;AAGAC;AAHA;AADA,iBARA,EAgBAC,IAhBA,CAgBA;AACAC;;AACA;AACA,iBAnBA,EAoBAC,KApBA,CAoBA;AACAD;AACAA;AACA;AACAA;AACA,iBAzBA,CADA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA2BA,KA/BA;;AAgCA;AACA;AACA;AACAE,cAnCA,wBAmCA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACAT,MACAU,MADA,yBACA,cADA,GACA;AACAP;AACA,uEADA;AAEAC,yDAFA;AAGAC;AAHA;AADA,iBADA,EAQAC,IARA,CAQA;AACAC;;AACA;AACA,iBAXA,EAYAC,KAZA,CAYA;AACAD;AACAA;AACA;AACAA;AACA,iBAjBA,CADA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAmBA;AAtDA;AAVA","names":["extend","ValidationObserver","ValidationProvider","localize","components","data","task","taskName","errorMessage","methods","createTask","axios","put","name","headers","client","uid","then","console","catch","deleteTask","delete"],"sourceRoot":"src/components","sources":["TaskCreatePage.vue"],"sourcesContent":["<template>\n  <div>\n    <h1 class=\"text-center mt-5 mb-5\">タスク作成</h1>\n    <v-card class=\"mx-auto px-5 py-5\" max-width=\"500\">\n      <v-alert id=\"error-message\" v-if=\"errorMessage\" type=\"error\">{{\n        errorMessage\n      }}</v-alert>\n      <validation-observer ref=\"observer\" v-slot=\"{ invalid }\">\n        <v-form ref=\"form\" width=\"400\">\n          <validation-provider\n            v-slot=\"{ errors }\"\n            name=\"タスク名\"\n            rules=\"required|max:30\"\n          >\n            <v-text-field\n              v-model=\"taskName\"\n              label=\"タスク名\"\n              required\n              :error-messages=\"errors\"\n            ></v-text-field>\n          </validation-provider>\n\n          <v-btn\n            color=\"primary\"\n            class=\"mr-4\"\n            @click=\"createTask\"\n            :disabled=\"(isSameTaskName || invalid)\"\n          >\n            作成\n          </v-btn>\n          <v-btn link class=\"mt-5\" color=\"info\" to=\"/task_list\"\n            >リストに戻る</v-btn\n          >\n        </v-form>\n      </validation-observer>\n    </v-card>\n  </div>\n</template>\n\n<script>\n  import axios from \"axios\";\n  import {\n    extend,\n    ValidationObserver,\n    ValidationProvider,\n    localize,\n  } from \"vee-validate\";\n  import { max } from \"vee-validate/dist/rules\";\n  import ja from \"vee-validate/dist/locale/ja\";\n\n  localize(\"ja\", ja);\n  extend(\"max\", max);\n\n  export default {\n    components: {\n      ValidationProvider,\n      ValidationObserver,\n    },\n    data: () => ({\n      task: {},\n      taskName: \"\",\n      errorMessage: \"\",\n    }),\n    methods: {\n      /**\n       * タスクを編集するための関数です\n       */\n      async createTask() {\n        await axios\n          .put(\n            `/api/v1/tasks/${this.task.id}`,\n            {\n              task: {\n                name: this.taskName,\n              },\n            },\n            {\n              headers: {\n                \"access-token\": this.$cookies.get(\"access-token\"),\n                client: this.$cookies.get(\"client\"),\n                uid: this.$cookies.get(\"uid\"),\n              },\n            }\n          )\n          .then((response) => {\n            console.log(response);\n            this.$router.push(\"/task_list\");\n          })\n          .catch((error) => {\n            console.error(error);\n            console.error(error.response);\n            this.errorMessage = error.response.data.errors[0];\n            console.error(this.errorMessage);\n          });\n      },\n      /**\n       * タスクを削除するための関数です\n       */\n      async deleteTask() {\n        await axios\n          .delete(`/api/v1/tasks/${this.task.id}`, {\n            headers: {\n              \"access-token\": this.$cookies.get(\"access-token\"),\n              client: this.$cookies.get(\"client\"),\n              uid: this.$cookies.get(\"uid\"),\n            },\n          })\n          .then((response) => {\n            console.log(response);\n            this.$router.push(\"/task_list\");\n          })\n          .catch((error) => {\n            console.error(error);\n            console.error(error.response);\n            this.errorMessage = error.response.data.errors[0];\n            console.error(this.errorMessage);\n          });\n      },\n    },\n  };\n</script>\n"]},"metadata":{},"sourceType":"module"}