{"ast":null,"code":"import _asyncToGenerator from \"/app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"regenerator-runtime/runtime.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport axios from \"axios\";\nexport default {\n  data: function data() {\n    return {\n      tasks: [],\n      access_token: \"\",\n      client: \"\",\n      uid: \"\",\n      errorMessage: \"\",\n      model: 1\n    };\n  },\n  mounted: function mounted() {\n    var _this = this;\n\n    return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _this.access_token = _this.$cookies.get(\"access-token\");\n              _this.client = _this.$cookies.get(\"client\");\n              _this.uid = _this.$cookies.get(\"uid\");\n              _context.next = 5;\n              return _this.getTasks();\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }))();\n  },\n  methods: {\n    getTasks: function getTasks() {\n      var _this2 = this;\n\n      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                axios.get(\"/api/v1/tasks\", {\n                  headers: {\n                    \"access-token\": _this2.access_token,\n                    client: _this2.client,\n                    uid: _this2.uid\n                  }\n                }).then(function (response) {\n                  console.log(response);\n                  _this2.tasks = response.data.data;\n\n                  _this2.$store.set(\"tasks\", response.data.data);\n\n                  console.log(_this2.tasks);\n                }).catch(function (error) {\n                  console.error(error);\n                  console.error(error.response);\n                  _this2.errorMessage = error.response.data.errors[0];\n                  console.error(_this2.errorMessage);\n                });\n\n              case 1:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }))();\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8BA;AAEA;AACAA;AAAA;AACAC,eADA;AAEAC,sBAFA;AAGAC,gBAHA;AAIAC,aAJA;AAKAC,sBALA;AAMAC;AANA;AAAA,GADA;AASAC,SATA,qBASA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAAA,qBAIA,gBAJA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA,GAdA;AAeAC;AACAC,YADA,sBACA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AACAC,sBACAC,GADA,CACA,eADA,EACA;AACAC;AACA,uDADA;AAEAT,yCAFA;AAGAC;AAHA;AADA,iBADA,EAQAS,IARA,CAQA;AACAC;AACA;;AACA;;AACAA;AACA,iBAbA,EAcAC,KAdA,CAcA;AACAD;AACAA;AACA;AACAA;AACA,iBAnBA;;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAqBA;AAtBA;AAfA","names":["data","tasks","access_token","client","uid","errorMessage","model","mounted","methods","getTasks","axios","get","headers","then","console","catch"],"sourceRoot":"src/components","sources":["TaskListPage.vue"],"sourcesContent":["<template>\n  <div>\n    <h1 class=\"text-center mt-5 mb-5\">タスクリスト</h1>\n\n    <v-card class=\"mx-auto\" max-width=\"500\">\n      <v-list flat outline>\n        <v-list-item-group v-model=\"model\">\n          <v-list-item\n            v-for=\"(task, i) in tasks\"\n            :key=\"i\"\n            link\n            to=\"/task/#{task.id}\"\n          >\n            <v-list-item-icon>\n              <v-icon>mdi-clipboard-outline</v-icon>\n            </v-list-item-icon>\n            <v-list-item-content>\n              <v-list-item-title v-text=\"task.name\"></v-list-item-title>\n            </v-list-item-content>\n            <v-btn icon ripple @click=\"deleteTodo(index)\">\n              <v-icon color=\"grey lighten-1\">mdi-delete</v-icon>\n            </v-btn>\n          </v-list-item>\n        </v-list-item-group>\n      </v-list>\n    </v-card>\n  </div>\n</template>\n\n<script>\n  import axios from \"axios\";\n\n  export default {\n    data: () => ({\n      tasks: [],\n      access_token: \"\",\n      client: \"\",\n      uid: \"\",\n      errorMessage: \"\",\n      model: 1,\n    }),\n    async mounted() {\n      this.access_token = this.$cookies.get(\"access-token\");\n      this.client = this.$cookies.get(\"client\");\n      this.uid = this.$cookies.get(\"uid\");\n      await this.getTasks();\n    },\n    methods: {\n      async getTasks() {\n        axios\n          .get(\"/api/v1/tasks\", {\n            headers: {\n              \"access-token\": this.access_token,\n              client: this.client,\n              uid: this.uid,\n            },\n          })\n          .then((response) => {\n            console.log(response);\n            this.tasks = response.data.data;\n            this.$store.set(\"tasks\", response.data.data);\n            console.log(this.tasks);\n          })\n          .catch((error) => {\n            console.error(error);\n            console.error(error.response);\n            this.errorMessage = error.response.data.errors[0];\n            console.error(this.errorMessage);\n          });\n      },\n    },\n  };\n</script>\n"]},"metadata":{},"sourceType":"module"}