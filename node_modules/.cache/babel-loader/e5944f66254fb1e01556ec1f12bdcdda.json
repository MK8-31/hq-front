{"ast":null,"code":"import \"core-js/modules/es.object.to-string.js\";\nimport Vue from \"vue\";\nimport VueRouter from \"vue-router\";\nimport HomePage from \"@/components/HomePage.vue\";\nimport LoginPage from \"@/components/LoginPage.vue\";\nimport LogoutPage from \"@/components/LogoutPage.vue\";\nimport SignUpPage from \"@/components/SignUpPage.vue\";\nimport HelpPage from \"@/components/HelpPage.vue\";\nimport AccountPage from \"@/components/AccountPage.vue\";\nimport RecordPage from \"@/components/RecordPage.vue\";\nimport ShowRecordPage from \"@/components/ShowRecordPage.vue\";\nimport ClassChangePage from \"@/components/ClassChangePage.vue\";\nimport TaskListPage from \"@/components/Task/TaskListPage.vue\";\nimport TaskPage from \"@/components/Task/TaskPage.vue\";\nimport TaskCreatePage from \"@/components/Task/TaskCreatePage.vue\";\nimport TaskEditPage from \"@/components/Task/TaskEditPage.vue\";\nVue.use(VueRouter);\nvar routes = [{\n  path: \"/\",\n  component: HomePage,\n  meta: {\n    isPublic: true\n  }\n}, {\n  path: \"/login\",\n  component: LoginPage,\n  meta: {\n    isPublic: true\n  }\n}, {\n  path: \"/logout\",\n  component: LogoutPage\n}, {\n  path: \"/signup\",\n  component: SignUpPage,\n  meta: {\n    isPublic: true\n  }\n}, {\n  path: \"/help\",\n  component: HelpPage,\n  meta: {\n    isPublic: true\n  }\n}, {\n  path: \"/account\",\n  component: AccountPage\n}, {\n  path: \"/record\",\n  component: RecordPage\n}, {\n  path: \"/show_record\",\n  component: ShowRecordPage\n}, {\n  path: \"/class_change\",\n  component: ClassChangePage\n}, {\n  path: \"/task_list\",\n  component: TaskListPage\n}, {\n  path: \"/task/:id\",\n  component: TaskPage\n}, {\n  path: \"/task_create\",\n  component: TaskCreatePage\n}, {\n  path: \"/task_edit/:id\",\n  component: TaskEditPage\n}];\nexport default new VueRouter({\n  mode: \"history\",\n  routes: routes\n});\nrouter.beforeEach(function (to, from, next) {\n  // isPublic でない場合(=認証が必要な場合)、かつ、ログインしていない場合\n  if (to.matched.some(function (record) {\n    return !record.meta.isPublic;\n  }) && !store.getters.getLoggedIn) {\n    // queryはログイン後の遷移などに使用できる\n    next({\n      path: \"/login\",\n      query: {\n        redirect: to.fullPath\n      }\n    }); // リロードした時は、クッキーがあればloggeInがtrueになるので、その前にこのif分が実行されるとだめ\n    // それまで待つにはどうすればいいか\n  } else {\n    next();\n  }\n});","map":{"version":3,"sources":["/app/src/router/router.js"],"names":["Vue","VueRouter","HomePage","LoginPage","LogoutPage","SignUpPage","HelpPage","AccountPage","RecordPage","ShowRecordPage","ClassChangePage","TaskListPage","TaskPage","TaskCreatePage","TaskEditPage","use","routes","path","component","meta","isPublic","mode","router","beforeEach","to","from","next","matched","some","record","store","getters","getLoggedIn","query","redirect","fullPath"],"mappings":"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","sourcesContent":["import Vue from \"vue\";\nimport VueRouter from \"vue-router\";\n\nimport HomePage from \"@/components/HomePage.vue\";\nimport LoginPage from \"@/components/LoginPage.vue\";\nimport LogoutPage from \"@/components/LogoutPage.vue\";\nimport SignUpPage from \"@/components/SignUpPage.vue\";\nimport HelpPage from \"@/components/HelpPage.vue\";\nimport AccountPage from \"@/components/AccountPage.vue\";\nimport RecordPage from \"@/components/RecordPage.vue\";\nimport ShowRecordPage from \"@/components/ShowRecordPage.vue\";\nimport ClassChangePage from \"@/components/ClassChangePage.vue\";\nimport TaskListPage from \"@/components/Task/TaskListPage.vue\";\nimport TaskPage from \"@/components/Task/TaskPage.vue\";\nimport TaskCreatePage from \"@/components/Task/TaskCreatePage.vue\";\nimport TaskEditPage from \"@/components/Task/TaskEditPage.vue\";\n\nVue.use(VueRouter);\n\nconst routes = [\n  { path: \"/\", component: HomePage, meta: { isPublic: true } },\n  { path: \"/login\", component: LoginPage, meta: { isPublic: true } },\n  { path: \"/logout\", component: LogoutPage },\n  { path: \"/signup\", component: SignUpPage, meta: { isPublic: true } },\n  { path: \"/help\", component: HelpPage, meta: { isPublic: true } },\n  { path: \"/account\", component: AccountPage },\n  { path: \"/record\", component: RecordPage },\n  { path: \"/show_record\", component: ShowRecordPage },\n  { path: \"/class_change\", component: ClassChangePage },\n  { path: \"/task_list\", component: TaskListPage },\n  { path: \"/task/:id\", component: TaskPage },\n  { path: \"/task_create\", component: TaskCreatePage },\n  { path: \"/task_edit/:id\", component: TaskEditPage },\n];\n\nexport default new VueRouter({\n  mode: \"history\",\n  routes,\n});\n\nrouter.beforeEach((to, from, next) => {\n  // isPublic でない場合(=認証が必要な場合)、かつ、ログインしていない場合\n  if (\n    to.matched.some((record) => !record.meta.isPublic) &&\n    !store.getters.getLoggedIn\n  ) {\n    // queryはログイン後の遷移などに使用できる\n    next({ path: \"/login\", query: { redirect: to.fullPath } });\n    // リロードした時は、クッキーがあればloggeInがtrueになるので、その前にこのif分が実行されるとだめ\n    // それまで待つにはどうすればいいか\n  } else {\n    next();\n  }\n});\n"]},"metadata":{},"sourceType":"module"}