{"ast":null,"code":"import _asyncToGenerator from \"/app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"regenerator-runtime/runtime.js\";\nimport \"core-js/modules/es.function.name.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  data: function data() {\n    return {\n      task: {},\n      task_name: \"\"\n    };\n  },\n  mounted: function mounted() {\n    if (this.$store.getters.getTasks.length == 0 || !this.$route.params[\"id\"]) {\n      this.$router.push(\"/task_list\");\n    } else {\n      // paramからタスクのIDを取得\n      var task_id = this.$route.params[\"id\"]; // vuexのストアからタスクIDでタスクを取得する\n\n      this.task = this.$store.getters.getTaskFromId(task_id);\n      console.log(this.task);\n      this.task_name = this.task.name;\n    }\n  },\n  methods: {\n    updateTask: function updateTask() {\n      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                return _context.abrupt(\"return\", null);\n\n              case 1:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }))();\n    },\n    deleteTask: function deleteTask() {\n      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                return _context2.abrupt(\"return\", null);\n\n              case 1:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }))();\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;AAkBA;AACAA;AAAA;AACAC,cADA;AAEAC;AAFA;AAAA,GADA;AAKAC,SALA,qBAKA;AACA,QACA,4CACA,yBAFA,EAGA;AACA;AACA,KALA,MAKA;AACA;AACA,6CAFA,CAGA;;AACA;AACAC;AACA;AACA;AACA,GAnBA;AAoBAC;AACAC,cADA,wBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iDACA,IADA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA,KAHA;AAIAC,cAJA,wBAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kDACA,IADA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AANA;AApBA","names":["data","task","task_name","mounted","console","methods","updateTask","deleteTask"],"sourceRoot":"src/components","sources":["TaskPage.vue"],"sourcesContent":["<template>\n  <v-form ref=\"form\">\n    <v-text-field\n      v-model=\"task_name\"\n      :counter=\"30\"\n      label=\"Name\"\n      required\n    ></v-text-field>\n\n    <v-btn color=\"error\" class=\"mr-4\" @click=\"updateTask\">\n      Update\n    </v-btn>\n\n    <v-btn color=\"warning\" @click=\"deleteTask\">Delete</v-btn>\n  </v-form>\n</template>\n\n<script>\n  export default {\n    data: () => ({\n      task: {},\n      task_name: \"\",\n    }),\n    mounted() {\n      if (\n        this.$store.getters.getTasks.length == 0 ||\n        !this.$route.params[\"id\"]\n      ) {\n        this.$router.push(\"/task_list\");\n      } else {\n        // paramからタスクのIDを取得\n        const task_id = this.$route.params[\"id\"];\n        // vuexのストアからタスクIDでタスクを取得する\n        this.task = this.$store.getters.getTaskFromId(task_id);\n        console.log(this.task);\n        this.task_name = this.task.name;\n      }\n    },\n    methods: {\n      async updateTask() {\n        return null;\n      },\n      async deleteTask() {\n        return null;\n      },\n    },\n  };\n</script>\n"]},"metadata":{},"sourceType":"module"}