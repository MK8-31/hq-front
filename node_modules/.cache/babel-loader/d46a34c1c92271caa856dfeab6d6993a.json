{"ast":null,"code":"//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport axios from \"axios\";\nimport { extend, ValidationObserver, ValidationProvider, localize } from \"vee-validate\";\nimport { max, min, required, email } from \"vee-validate/dist/rules\";\nimport ja from \"vee-validate/dist/locale/ja\";\nlocalize(\"ja\", ja);\nextend(\"max\", max);\nextend(\"min\", min);\nextend(\"required\", required);\nextend(\"email\", email);\nexport default {\n  components: {\n    ValidationProvider,\n    ValidationObserver\n  },\n  data: () => ({\n    showPassword: false,\n    nickname: \"\",\n    email: \"\",\n    password: \"\",\n    invalid: false,\n    errorMessage: \"\"\n  }),\n  methods: {\n    async submit() {\n      console.log(this.nickname, this.email, this.password);\n      await axios.post(\"/api/v1/auth\", {\n        nickname: this.nickname,\n        email: this.email,\n        password: this.password\n      }).then(response => {\n        console.log(response);\n        this.$cookies.set(\"access-token\", response.headers[\"access-token\"]);\n        this.$cookies.set(\"client\", response.headers[\"client\"]);\n        this.$cookies.set(\"uid\", decodeURI(response.headers[\"uid\"]));\n        this.$store.commit(\"setIsLoggedIn\", true);\n        this.$router.push(\"/\");\n      }).catch(error => {\n        this.errorMessage = \"\";\n        console.error(error);\n        console.error(error.response);\n        error.response.data.errors.forEach(error => {\n          console.error(error);\n        });\n        error.response.data.errors.forEach(error => {\n          this.errorMessage += error;\n          this.errorMessage += \"\\n\";\n        });\n      });\n    }\n\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoEA;AACA,SACAA,MADA,EAEAC,kBAFA,EAGAC,kBAHA,EAIAC,QAJA,QAKA,cALA;AAMA;AACA;AAEAA;AACAH;AACAA;AACAA;AACAA;AAEA;AACAI;AACAF,sBADA;AAEAD;AAFA,GADA;AAKAI;AACAC,uBADA;AAEAC,gBAFA;AAGAC,aAHA;AAIAC,gBAJA;AAKAC,kBALA;AAMAC;AANA,IALA;AAaAC;AACA;AACAC;AACA,kBACAC,IADA,CACA,cADA,EACA;AACAP,+BADA;AAEAC,yBAFA;AAGAC;AAHA,OADA,EAMAM,IANA,CAMAC;AACAH;AACA;AACA;AACA;AACA;AACA;AACA,OAbA,EAcAI,KAdA,CAcAC;AACA;AACAL;AACAA;AACAK;AACAL;AACA,SAFA;AAGAK;AACA;AACA;AACA,SAHA;AAIA,OAzBA;AA0BA;;AA7BA;AAbA","names":["extend","ValidationObserver","ValidationProvider","localize","components","data","showPassword","nickname","email","password","invalid","errorMessage","methods","console","post","then","response","catch","error"],"sourceRoot":"src/components","sources":["SignUpPage.vue"],"sourcesContent":["<template>\n  <v-card width=\"400px\" class=\"mx-auto mt-5\">\n    <v-alert v-if=\"errorMessage\" type=\"error\">{{ errorMessage }}</v-alert>\n    <v-card-title>\n      <h1 class=\"display-1\">ユーザー登録</h1>\n    </v-card-title>\n    <v-card-text>\n      <validation-observer ref=\"observer\" v-slot=\"{ invalid }\">\n        <v-form>\n          <ValidationProvider\n            ref=\"observer\"\n            v-slot=\"{ errors }\"\n            rules=\"required\"\n            name=\"ニックネーム\"\n          >\n            <v-text-field\n              v-model=\"nickname\"\n              prepend-icon=\"mdi-card-account-details-outline\"\n              type=\"email\"\n              label=\"ニックネーム\"\n              required\n              :error-messages=\"errors\"\n            />\n          </ValidationProvider>\n          <ValidationProvider\n            ref=\"observer\"\n            v-slot=\"{ errors }\"\n            rules=\"required|email\"\n            name=\"メールアドレス\"\n          >\n            <v-text-field\n              v-model=\"email\"\n              prepend-icon=\"mdi-email\"\n              type=\"email\"\n              label=\"メールアドレス\"\n              required\n              :error-messages=\"errors\"\n            />\n          </ValidationProvider>\n          <ValidationProvider\n            ref=\"observer\"\n            v-slot=\"{ errors }\"\n            rules=\"required|min:6|max:30\"\n            name=\"パスワード\"\n          >\n            <v-text-field\n              v-model=\"password\"\n              @click:append=\"showPassword = !showPassword\"\n              prepend-icon=\"mdi-lock\"\n              :append-icon=\"showPassword ? 'mdi-eye' : 'mdi-eye-off'\"\n              :type=\"showPassword ? 'text' : 'password'\"\n              label=\"パスワード\"\n              required\n              :error-messages=\"errors\"\n            />\n          </ValidationProvider>\n          <v-card-actions>\n            <v-btn class=\"info\" @click=\"submit()\" :disabled=\"invalid\"\n              >登録</v-btn\n            >\n          </v-card-actions>\n        </v-form>\n      </validation-observer>\n    </v-card-text>\n  </v-card>\n</template>\n\n<script>\n  import axios from \"axios\";\n  import {\n    extend,\n    ValidationObserver,\n    ValidationProvider,\n    localize,\n  } from \"vee-validate\";\n  import { max, min, required, email } from \"vee-validate/dist/rules\";\n  import ja from \"vee-validate/dist/locale/ja\";\n\n  localize(\"ja\", ja);\n  extend(\"max\", max);\n  extend(\"min\", min);\n  extend(\"required\", required);\n  extend(\"email\", email);\n\n  export default {\n    components: {\n      ValidationProvider,\n      ValidationObserver,\n    },\n    data: () => ({\n      showPassword: false,\n      nickname: \"\",\n      email: \"\",\n      password: \"\",\n      invalid: false,\n      errorMessage: \"\",\n    }),\n    methods: {\n      async submit() {\n        console.log(this.nickname, this.email, this.password);\n        await axios\n          .post(\"/api/v1/auth\", {\n            nickname: this.nickname,\n            email: this.email,\n            password: this.password,\n          })\n          .then((response) => {\n            console.log(response);\n            this.$cookies.set(\"access-token\", response.headers[\"access-token\"]);\n            this.$cookies.set(\"client\", response.headers[\"client\"]);\n            this.$cookies.set(\"uid\", decodeURI(response.headers[\"uid\"]));\n            this.$store.commit(\"setIsLoggedIn\", true);\n            this.$router.push(\"/\");\n          })\n          .catch((error) => {\n            this.errorMessage = \"\";\n            console.error(error);\n            console.error(error.response);\n            error.response.data.errors.forEach((error) => {\n              console.error(error);\n            });\n            error.response.data.errors.forEach((error) => {\n              this.errorMessage += error;\n              this.errorMessage += \"\\n\";\n            });\n          });\n      },\n    },\n  };\n</script>\n"]},"metadata":{},"sourceType":"module"}